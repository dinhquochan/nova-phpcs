exports.activate=function(){},exports.deactivate=function(){};class IssuesProvider{runningCodeSniffer(e){if(!e.isRemote)return new Promise(s=>{const n=[],t={args:[nova.config.get("dqh-phpcs.executable-path"),"--report=json",`--standard=${nova.config.get("dqh-phpcs.standard")}`,e.path]},r=new Process("/usr/bin/env",t);r.onStdout(e=>{let t=JSON.parse(e);if(t)for(let[e,s]of Object.entries(t.files))s.messages.forEach(e=>{let s=new Issue;s.message=e.message,s.severity="ERROR"===e.type?IssueSeverity.Error:IssueSeverity.Warning,s.line=e.line,s.column=e.column,n.push(s)});s(n)}),r.start()})}async provideIssues(e){return await this.runningCodeSniffer(e.document)}}nova.assistants.registerIssueAssistant("php",new IssuesProvider);